{
  "address": "0xc7C6458FA0717E099Da9e3F97cE3D59ad7eB5dc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "Fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funderWithAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xbaa0bb7dc9643a1f15b8a1a0ce35fccdcee84fd5988934297816ee0e0b15bb19",
  "receipt": {
    "to": null,
    "from": "0x055F377271dF850028d67bed1F413bC384895732",
    "contractAddress": "0xc7C6458FA0717E099Da9e3F97cE3D59ad7eB5dc9",
    "transactionIndex": 4,
    "gasUsed": "866692",
    "logsBloom": "0x
    "blockHash": "0x98c543a8298b81066091157d6a90b3fa8d7d051db65071a24e1aac6a0c2ee860",
    "transactionHash": "0xbaa0bb7dc9643a1f15b8a1a0ce35fccdcee84fd5988934297816ee0e0b15bb19",
    "logs": [],
    "blockNumber": 11212915,
    "cumulativeGasUsed": "4255206",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "052038f940eb631973042e690845a8c1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"Fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funderWithAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant minimumUsd = 50 * 1e18;\\n    address[] public funders;\\n    mapping(address => uint256) public funderWithAmount;\\n    address public immutable owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function Fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minimumUsd,\\n            \\\"Didn't send enough ethers !!!\\\"\\n        );\\n        funders.push(msg.sender);\\n        funderWithAmount[msg.sender] = msg.value.getConversionRate(priceFeed);\\n    }\\n\\n    function Withdraw() public onlyAdmin {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            funderWithAmount[funder] = 0;\\n        }\\n\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed!\\\");\\n    }\\n\\n    modifier onlyAdmin() {\\n        // require(msg.sender == owner, \\\"You are not Owner!\\\");\\n        if (msg.sender != owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    receive() external payable {\\n        Fund();\\n    }\\n\\n    fallback() external payable {\\n        Fund();\\n    }\\n}\\n\",\"keccak256\":\"0xfa42ff3285ecf279df9546aa1e9a2744402dc79fbd6e16e0e47924c99873d5c6\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getEthPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //     0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        // );\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    // function getConversion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getEthPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethAmount * ethPrice) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xa095f07b624513b2086162ddb7f78137fdf19166450815b87ee494fe32ebe80c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610fb1380380610fb183398181016040528101906100329190610113565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e0826100b5565b9050919050565b6100f0816100d5565b81146100fb57600080fd5b50565b60008151905061010d816100e7565b92915050565b600060208284031215610129576101286100b0565b5b6000610137848285016100fe565b91505092915050565b60805160601c610e4c6101656000396000818161031501526105930152610e4c6000f3fe6080604052600436106100745760003560e01c806370ea80d01161004e57806370ea80d0146100d9578063741bef1a146101165780638da5cb5b14610141578063dc0d3dff1461016c57610083565b8063098de8201461008d57806357ea89b6146100b85780636ce1417e146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a2610306565b6040516100af9190610790565b60405180910390f35b3480156100c457600080fd5b506100cd610313565b005b6100d76101a9565b005b3480156100e557600080fd5b5061010060048036038101906100fb919061080e565b610553565b60405161010d9190610790565b60405180910390f35b34801561012257600080fd5b5061012b61056b565b604051610138919061089a565b60405180910390f35b34801561014d57600080fd5b50610156610591565b60405161016391906108c4565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e919061090b565b6105b5565b6040516101a091906108c4565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105f490919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610995565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102c1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105f490919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610398576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104435760008082815481106103bd576103bc6109b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043b90610a13565b91505061039b565b50600067ffffffffffffffff81111561045f5761045e610a5c565b5b60405190808252806020026020018201604052801561048d5781602001602082028036833780820191505090505b50600090805190602001906104a39291906106d0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ca90610abc565b60006040518083038185875af1925050503d8060008114610507576040519150601f19603f3d011682016040523d82523d6000602084013e61050c565b606091505b5050905080610550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054790610b1d565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105c557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061060083610630565b90506000670de0b6b3a764000082866106199190610b3d565b6106239190610bc6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561067957600080fd5b505afa15801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b19190610c84565b5050509150506402540be400816106c89190610cff565b915050919050565b828054828255906000526020600020908101928215610749579160200282015b828111156107485782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106f0565b5b509050610756919061075a565b5090565b5b8082111561077357600081600090555060010161075b565b5090565b6000819050919050565b61078a81610777565b82525050565b60006020820190506107a56000830184610781565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107db826107b0565b9050919050565b6107eb816107d0565b81146107f657600080fd5b50565b600081359050610808816107e2565b92915050565b600060208284031215610824576108236107ab565b5b6000610832848285016107f9565b91505092915050565b6000819050919050565b600061086061085b610856846107b0565b61083b565b6107b0565b9050919050565b600061087282610845565b9050919050565b600061088482610867565b9050919050565b61089481610879565b82525050565b60006020820190506108af600083018461088b565b92915050565b6108be816107d0565b82525050565b60006020820190506108d960008301846108b5565b92915050565b6108e881610777565b81146108f357600080fd5b50565b600081359050610905816108df565b92915050565b600060208284031215610921576109206107ab565b5b600061092f848285016108f6565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865727320212121000000600082015250565b600061097f601d83610938565b915061098a82610949565b602082019050919050565b600060208201905081810360008301526109ae81610972565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a1e82610777565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a5157610a506109e4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa6600083610a8b565b9150610ab182610a96565b600082019050919050565b6000610ac782610a99565b9150819050919050565b7f43616c6c204661696c6564210000000000000000000000000000000000000000600082015250565b6000610b07600c83610938565b9150610b1282610ad1565b602082019050919050565b60006020820190508181036000830152610b3681610afa565b9050919050565b6000610b4882610777565b9150610b5383610777565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b8c57610b8b6109e4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bd182610777565b9150610bdc83610777565b925082610bec57610beb610b97565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c1681610bf7565b8114610c2157600080fd5b50565b600081519050610c3381610c0d565b92915050565b6000819050919050565b610c4c81610c39565b8114610c5757600080fd5b50565b600081519050610c6981610c43565b92915050565b600081519050610c7e816108df565b92915050565b600080600080600060a08688031215610ca057610c9f6107ab565b5b6000610cae88828901610c24565b9550506020610cbf88828901610c5a565b9450506040610cd088828901610c6f565b9350506060610ce188828901610c6f565b9250506080610cf288828901610c24565b9150509295509295909350565b6000610d0a82610c39565b9150610d1583610c39565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d5457610d536109e4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d9157610d906109e4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dce57610dcd6109e4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e0b57610e0a6109e4565b5b82820290509291505056fea264697066735822122086fc12f1e95a062d3d72f27575c27bbb4510480a1f5adb62fd6065607bbb7f8864736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c806370ea80d01161004e57806370ea80d0146100d9578063741bef1a146101165780638da5cb5b14610141578063dc0d3dff1461016c57610083565b8063098de8201461008d57806357ea89b6146100b85780636ce1417e146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a2610306565b6040516100af9190610790565b60405180910390f35b3480156100c457600080fd5b506100cd610313565b005b6100d76101a9565b005b3480156100e557600080fd5b5061010060048036038101906100fb919061080e565b610553565b60405161010d9190610790565b60405180910390f35b34801561012257600080fd5b5061012b61056b565b604051610138919061089a565b60405180910390f35b34801561014d57600080fd5b50610156610591565b60405161016391906108c4565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e919061090b565b6105b5565b6040516101a091906108c4565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105f490919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610995565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102c1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105f490919063ffffffff16565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610398576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104435760008082815481106103bd576103bc6109b5565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061043b90610a13565b91505061039b565b50600067ffffffffffffffff81111561045f5761045e610a5c565b5b60405190808252806020026020018201604052801561048d5781602001602082028036833780820191505090505b50600090805190602001906104a39291906106d0565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ca90610abc565b60006040518083038185875af1925050503d8060008114610507576040519150601f19603f3d011682016040523d82523d6000602084013e61050c565b606091505b5050905080610550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054790610b1d565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105c557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061060083610630565b90506000670de0b6b3a764000082866106199190610b3d565b6106239190610bc6565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561067957600080fd5b505afa15801561068d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b19190610c84565b5050509150506402540be400816106c89190610cff565b915050919050565b828054828255906000526020600020908101928215610749579160200282015b828111156107485782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106f0565b5b509050610756919061075a565b5090565b5b8082111561077357600081600090555060010161075b565b5090565b6000819050919050565b61078a81610777565b82525050565b60006020820190506107a56000830184610781565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107db826107b0565b9050919050565b6107eb816107d0565b81146107f657600080fd5b50565b600081359050610808816107e2565b92915050565b600060208284031215610824576108236107ab565b5b6000610832848285016107f9565b91505092915050565b6000819050919050565b600061086061085b610856846107b0565b61083b565b6107b0565b9050919050565b600061087282610845565b9050919050565b600061088482610867565b9050919050565b61089481610879565b82525050565b60006020820190506108af600083018461088b565b92915050565b6108be816107d0565b82525050565b60006020820190506108d960008301846108b5565b92915050565b6108e881610777565b81146108f357600080fd5b50565b600081359050610905816108df565b92915050565b600060208284031215610921576109206107ab565b5b600061092f848285016108f6565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682065746865727320212121000000600082015250565b600061097f601d83610938565b915061098a82610949565b602082019050919050565b600060208201905081810360008301526109ae81610972565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a1e82610777565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a5157610a506109e4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa6600083610a8b565b9150610ab182610a96565b600082019050919050565b6000610ac782610a99565b9150819050919050565b7f43616c6c204661696c6564210000000000000000000000000000000000000000600082015250565b6000610b07600c83610938565b9150610b1282610ad1565b602082019050919050565b60006020820190508181036000830152610b3681610afa565b9050919050565b6000610b4882610777565b9150610b5383610777565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b8c57610b8b6109e4565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bd182610777565b9150610bdc83610777565b925082610bec57610beb610b97565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c1681610bf7565b8114610c2157600080fd5b50565b600081519050610c3381610c0d565b92915050565b6000819050919050565b610c4c81610c39565b8114610c5757600080fd5b50565b600081519050610c6981610c43565b92915050565b600081519050610c7e816108df565b92915050565b600080600080600060a08688031215610ca057610c9f6107ab565b5b6000610cae88828901610c24565b9550506020610cbf88828901610c5a565b9450506040610cd088828901610c6f565b9350506060610ce188828901610c6f565b9250506080610cf288828901610c24565b9150509295509295909350565b6000610d0a82610c39565b9150610d1583610c39565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d5457610d536109e4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d9157610d906109e4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610dce57610dcd6109e4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e0b57610e0a6109e4565b5b82820290509291505056fea264697066735822122086fc12f1e95a062d3d72f27575c27bbb4510480a1f5adb62fd6065607bbb7f8864736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funderWithAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}